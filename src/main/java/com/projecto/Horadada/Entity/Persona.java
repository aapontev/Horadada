package com.projecto.Horadada.Entity;
// Generated 28/01/2020 04:40:27 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persona generated by hbm2java
 */
@Entity
@Table(name = "persona", schema = "dbo", catalog = "HORADADA")
public class Persona implements java.io.Serializable {

	/**
	* 
	*/
	private static final long serialVersionUID = 1L;
	private int idPersona;
	private Integer codTipoDocumento;
	private String correoElectronico;
	private String direccion;
	private String edad;
	private Date fechaCreacion;
	private Date fechaNacimiento;
	private Date fechaUpdate;
	private String nombreCompleto;
	private Integer numeroDocumento;
	private String primerApellido;
	private String primerNombre;
	private String segundoApellido;
	private String segundoNombre;
	private int tipoPersona;
	private List<TelefonoMonitoreo> telefonoMonitoreos;
	private List<Transportista> transportistas;
	private List<Contacto> contactos;
	private List<Usuario> usuarios;

	public Persona() {
	}

	public Persona(int idPersona, int tipoPersona) {
		this.idPersona = idPersona;
		this.tipoPersona = tipoPersona;
	}

	public Persona(int idPersona, Integer codTipoDocumento, String correoElectronico, String direccion, String edad,
			Date fechaCreacion, Date fechaNacimiento, Date fechaUpdate, String nombreCompleto, Integer numeroDocumento,
			String primerApellido, String primerNombre, String segundoApellido, String segundoNombre, int tipoPersona,
			List<TelefonoMonitoreo> telefonoMonitoreos, List<Transportista> transportistas, List<Contacto> contactos, List<Usuario> usuarios) {
		this.idPersona = idPersona;
		this.codTipoDocumento = codTipoDocumento;
		this.correoElectronico = correoElectronico;
		this.direccion = direccion;
		this.edad = edad;
		this.fechaCreacion = fechaCreacion;
		this.fechaNacimiento = fechaNacimiento;
		this.fechaUpdate = fechaUpdate;
		this.nombreCompleto = nombreCompleto;
		this.numeroDocumento = numeroDocumento;
		this.primerApellido = primerApellido;
		this.primerNombre = primerNombre;
		this.segundoApellido = segundoApellido;
		this.segundoNombre = segundoNombre;
		this.tipoPersona = tipoPersona;
		this.telefonoMonitoreos = telefonoMonitoreos;
		this.transportistas = transportistas;
		this.contactos = contactos;
		this.usuarios = usuarios;
	}

	@Id
	@GeneratedValue
	@Column(name = "idPersona", unique = true, nullable = false)
	public int getIdPersona() {
		return this.idPersona;
	}

	public void setIdPersona(int idPersona) {
		this.idPersona = idPersona;
	}

	@Column(name = "codTipoDocumento")
	public Integer getCodTipoDocumento() {
		return this.codTipoDocumento;
	}

	public void setCodTipoDocumento(Integer codTipoDocumento) {
		this.codTipoDocumento = codTipoDocumento;
	}

	@Column(name = "correoElectronico", length = 60)
	public String getCorreoElectronico() {
		return this.correoElectronico;
	}

	public void setCorreoElectronico(String correoElectronico) {
		this.correoElectronico = correoElectronico;
	}

	@Column(name = "direccion", length = 60)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "edad", length = 2)
	public String getEdad() {
		return this.edad;
	}

	public void setEdad(String edad) {
		this.edad = edad;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fechaCreacion", length = 10)
	public Date getFechaCreacion() {
		return this.fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	@Temporal(TemporalType.DATE )
	@Column(name = "fechaNacimiento", length = 10)
	public Date getFechaNacimiento() {
		return this.fechaNacimiento;
	}

	public void setFechaNacimiento(Date fechaNacimiento) {
		this.fechaNacimiento = fechaNacimiento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fechaUpdate", length = 10)
	public Date getFechaUpdate() {
		return this.fechaUpdate;
	}

	public void setFechaUpdate(Date fechaUpdate) {
		this.fechaUpdate = fechaUpdate;
	}

	@Column(name = "nombreCompleto", length = 80)
	public String getNombreCompleto() {
		return this.nombreCompleto;
	}

	public void setNombreCompleto(String nombreCompleto) {
		this.nombreCompleto = nombreCompleto;
	}

	@Column(name = "numeroDocumento")
	public Integer getNumeroDocumento() {
		return this.numeroDocumento;
	}

	public void setNumeroDocumento(Integer numeroDocumento) {
		this.numeroDocumento = numeroDocumento;
	}

	@Column(name = "primerApellido", length = 20)
	public String getPrimerApellido() {
		return this.primerApellido;
	}

	public void setPrimerApellido(String primerApellido) {
		this.primerApellido = primerApellido;
	}

	@Column(name = "primerNombre", length = 20)
	public String getPrimerNombre() {
		return this.primerNombre;
	}

	public void setPrimerNombre(String primerNombre) {
		this.primerNombre = primerNombre;
	}

	@Column(name = "segundoApellido", length = 20)
	public String getSegundoApellido() {
		return this.segundoApellido;
	}

	public void setSegundoApellido(String segundoApellido) {
		this.segundoApellido = segundoApellido;
	}

	@Column(name = "segundoNombre", length = 20)
	public String getSegundoNombre() {
		return this.segundoNombre;
	}

	public void setSegundoNombre(String segundoNombre) {
		this.segundoNombre = segundoNombre;
	}

	@Column(name = "tipoPersona", nullable = false)
	public int getTipoPersona() {
		return this.tipoPersona;
	}

	public void setTipoPersona(int tipoPersona) {
		this.tipoPersona = tipoPersona;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public List<TelefonoMonitoreo> getTelefonoMonitoreos() {
		return this.telefonoMonitoreos;
	}

	public void setTelefonoMonitoreos(List<TelefonoMonitoreo> telefonoMonitoreos) {
		this.telefonoMonitoreos = telefonoMonitoreos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public List<Transportista> getTransportistas() {
		return this.transportistas;
	}

	public void setTransportistas(List<Transportista> transportistas) {
		this.transportistas = transportistas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public List<Contacto> getContactos() {
		return this.contactos;
	}

	public void setContactos(List<Contacto> contactos) {
		this.contactos = contactos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public List<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(List<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

}
